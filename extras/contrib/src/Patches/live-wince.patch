diff -urp live.orig/groupsock/GroupsockHelper.cpp live/groupsock/GroupsockHelper.cpp
--- live.orig/groupsock/GroupsockHelper.cpp	2009-09-28 17:16:16.000000000 +0200
+++ live/groupsock/GroupsockHelper.cpp	2009-11-11 01:10:28.000000000 +0100
@@ -728,7 +728,7 @@ char const* timestampString() {
 int gettimeofday(struct timeval* tp, int* /*tz*/) {
 #if defined(_WIN32_WCE)
   /* FILETIME of Jan 1 1970 00:00:00. */
-  static const unsigned __int64 epoch = 116444736000000000L;
+  static const unsigned __int64 epoch = 116444736000000000LL;
 
   FILETIME    file_time;
   SYSTEMTIME  system_time;
diff -urp live.orig/liveMedia/InputFile.cpp live/liveMedia/InputFile.cpp
--- live.orig/liveMedia/InputFile.cpp	2009-09-28 17:16:16.000000000 +0200
+++ live/liveMedia/InputFile.cpp	2009-11-11 01:06:45.000000000 +0100
@@ -35,7 +35,7 @@ FILE* OpenInputFile(UsageEnvironment& en
   // Check for a special case file name: "stdin"
   if (strcmp(fileName, "stdin") == 0) {
     fid = stdin;
-#if defined(__WIN32__) || defined(_WIN32)
+#if (defined(__WIN32__) || defined(_WIN32)) && !defined(_WIN32_WCE)
     _setmode(_fileno(stdin), _O_BINARY); // convert to binary mode
 #endif
   } else {
diff -urp live.orig/liveMedia/OutputFile.cpp live/liveMedia/OutputFile.cpp
--- live.orig/liveMedia/OutputFile.cpp	2009-09-28 17:16:16.000000000 +0200
+++ live/liveMedia/OutputFile.cpp	2009-11-11 01:07:50.000000000 +0100
@@ -35,12 +35,12 @@ FILE* OpenOutputFile(UsageEnvironment& e
   // Check for special case 'file names': "stdout" and "stderr"
   if (strcmp(fileName, "stdout") == 0) {
     fid = stdout;
-#if defined(__WIN32__) || defined(_WIN32)
+#if (defined(__WIN32__) || defined(_WIN32)) && !defined(_WIN32_WCE)
     _setmode(_fileno(stdout), _O_BINARY);       // convert to binary mode
 #endif
   } else if (strcmp(fileName, "stderr") == 0) {
     fid = stderr;
-#if defined(__WIN32__) || defined(_WIN32)
+#if (defined(__WIN32__) || defined(_WIN32)) && !defined(_WIN32_WCE)
     _setmode(_fileno(stderr), _O_BINARY);       // convert to binary mode
 #endif
   } else {
