diff --git a/configure.ac b/configure.ac
index e5ee5c4..b381093 100644
--- a/configure.ac
+++ b/configure.ac
@@ -161,25 +166,61 @@ AC_SUBST(THREAD_LIBS)
 AC_SUBST(THREAD_CFLAGS)
 
 dnl ---------------------------------------------
-dnl dynamic linker
+dnl dvdcss checking
 dnl ---------------------------------------------
-case $host in
-  *mingw32*)
-    CFLAGS="-idirafter \$(top_srcdir)/msvc/include $CFLAGS"
-    LDFLAGS="-no-undefined $LDFLAGS"
-    ;;
-  *cygwin*)
-    LDFLAGS="-no-undefined $LDFLAGS"
-    ;;
-  *)
-    AC_CHECK_LIB(c, dlopen,
-	         DYNAMIC_LD_LIBS="",
-	         AC_CHECK_LIB(dl, dlopen,
-             	              DYNAMIC_LD_LIBS="-ldl",
-	                      AC_MSG_ERROR(dynamic linker needed)))
-    AC_SUBST(DYNAMIC_LD_LIBS)
-    ;;
-esac
+AC_ARG_WITH( [libdvdcss],
+    [  --with-libdvdcss[=PATH]    force linking against libdvdcss],
+    [if test x"$withval" != xno; then
+       link_dvdcss=yes
+     fi
+     if test x"$withval" != xyes; then
+       dvdcss_path=$withval
+     fi])
+
+if test x"$link_dvdcss" != xyes; then
+dnl dlopen libdvdcss
+  AC_CHECK_FUNC( dlopen,
+    [DL_LIBS="" ],
+    AC_CHECK_LIB( dl, dlopen,
+      [DL_LIBS=-ld ],
+      AC_MSG_ERROR(You need libdl (dlopen))
+    )
+  )
+else
+dnl link with libdvdcss
+  if test -z "$dvdcss_path"; then
+    AC_CHECK_LIB(dvdcss, dvdcss_interface_2,
+      [ CSS_LIBS=-ldvdcss ],
+      AC_MSG_ERROR(You need libdvdcss.so.2 or later)
+    )
+    AC_CHECK_HEADERS(dvdcss/dvdcss.h,
+      [ ],
+      AC_MSG_ERROR(You need libdvdcss (dvdcss.h))
+    )
+  else
+    saved_CFLAGS=$CFLAGS
+    CFLAGS="$CFLAGS -L$dvdcss_path/lib"
+    AC_CHECK_LIB(dvdcss, dvdcss_interface_2,
+      [ CSS_LIBS="-L$dvdcss_path/lib -R$dvdcss_path/lib -ldvdcss"
+        CSS_CFLAGS=-I$dvdcss_path/include ],
+      AC_MSG_ERROR(You need libdvdcss.so.2 or later)
+    )
+    CFLAGS=$saved_CFLAGS
+    dnl -w added to shutup GCC3.1's cpp warning about -I/usr/local
+    saved_CPPFLAGS=$CPPFLAGS
+    CPPFLAGS="-w $CPPFLAGS -I$dvdcss_path/include"
+    AC_CHECK_HEADERS(dvdcss/dvdcss.h,
+      [ ],
+      AC_MSG_ERROR(You need libdvdcss (dvdcss.h))
+    )
+    CPPFLAGS=$saved_CPPFLAGS
+  fi
+fi
+
+AC_SUBST(DL_LIBS)
+AC_SUBST(CSS_LIBS)
+AC_SUBST(CSS_CFLAGS)
+ 
 
 dnl ---------------------------------------------
 dnl cflags
diff --git a/examples/Makefile.am b/examples/Makefile.am
index 3cfda2f..3015dd5 100644
--- a/examples/Makefile.am
+++ b/examples/Makefile.am
@@ -8,7 +8,7 @@ noinst_PROGRAMS = menus
 
 menus_SOURCES = menus.c
 menus_LDFLAGS = -L$(top_srcdir)/src/
-menus_LDADD   = $(DVDNAV_LIB)
+menus_LDADD   = $(DVDNAV_LIB) $(CSS_LIBS)  
 
 $(DVDNAV_LIB):
 	@cd $(top_builddir)/src/ && $(MAKE) libdvdnav.la
diff --git a/src/libdvdread/dvd_input.c b/src/libdvdread/dvd_input.c
index d55aac7..63b416f 100644
--- a/src/libdvdread/dvd_input.c
+++ b/src/libdvdread/dvd_input.c
@@ -27,6 +27,11 @@
 #include "dvd_reader.h"
 #include "dvd_input.h"
 
+#ifdef WIN32
+#   define lseek _lseeki64
+#   undef off_t
+#   define off_t int64_t
+#endif
 
 /* The function pointers that is the exported interface of this file. */
 dvd_input_t (*dvdinput_open)  (const char *);
diff --git a/src/vm/vm.c b/src/vm/vm.c
index 53bef88..db855c7 100644
--- a/src/vm/vm.c
+++ b/src/vm/vm.c
@@ -134,24 +134,25 @@ static void vm_print_current_domain_state(vm_t *vm) {
 }
 #endif
 
+#include <libdvdread/dvd_input.h>
+
 static void dvd_read_name(char *name, const char *device) {
     /* Because we are compiling with _FILE_OFFSET_BITS=64
      * all off_t are 64bit.
      */
     off_t off;
-    int fd, i;
+    dvd_input_t fd; int i;
     uint8_t data[DVD_VIDEO_LB_LEN];
 
     /* Read DVD name */
-    fd = open(device, O_RDONLY);
+    fd = dvdinput_open(device);
     if (fd > 0) { 
-      off = lseek( fd, 32 * (off_t) DVD_VIDEO_LB_LEN, SEEK_SET );
-      if( off == ( 32 * (off_t) DVD_VIDEO_LB_LEN ) ) {
-        off = read( fd, data, DVD_VIDEO_LB_LEN ); 
-        close(fd);
-        if (off == ( (off_t) DVD_VIDEO_LB_LEN )) {
+      off = dvdinput_seek( fd, 16 );
+      if( off == 16 ) {
+        off = dvdinput_read( fd, data, 1, DVDINPUT_NOFLAGS ); 
+        if (off == 1 ) {
           fprintf(MSG_OUT, "libdvdnav: DVD Title: ");
-          for(i=25; i < 73; i++ ) {
+          for(i=40; i < 73; i++ ) {
             if((data[i] == 0)) break;
             if((data[i] > 32) && (data[i] < 127)) {
               fprintf(MSG_OUT, "%c", data[i]);
@@ -159,10 +160,12 @@ static void dvd_read_name(char *name, const char *device) {
               fprintf(MSG_OUT, " ");
             }
           }
-          strncpy(name, (char*) &data[25], 48);
-          name[48] = 0;
+          strncpy(name, (char*) &data[40], 32);
+          i=31;
+          while( (i >= 0) && (name[i] <= ' ')) --i;
+          name[i+1] = '\0';
           fprintf(MSG_OUT, "\nlibdvdnav: DVD Serial Number: ");
-          for(i=73; i < 89; i++ ) {
+          for(i=813; i < 829; i++ ) {
             if((data[i] == 0)) break;
             if((data[i] > 32) && (data[i] < 127)) {
               fprintf(MSG_OUT, "%c", data[i]);
@@ -186,7 +189,7 @@ static void dvd_read_name(char *name, const char *device) {
       } else {
         fprintf(MSG_OUT, "libdvdnav: Can't seek to block %u\n", 32 );
       }
-      close(fd);
+      dvdinput_close(fd);
     } else {
     fprintf(MSG_OUT, "NAME OPEN FAILED\n");
   }
