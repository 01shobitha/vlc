#! /bin/sh

##  bootstrap file for vlc, the VideoLAN Client
##  $Id: bootstrap,v 1.27 2002/11/13 20:51:03 sam Exp $
##
##  Authors: Samuel Hocevar <sam@zoy.org>

###
###  get a sane environment
###
LANG=C
export LANG

##
##  Give help
##
help()
{
  if test "$do_help" = "yes"
  then
    cat << EOF
recognized flags are:
  --config        create Makefile and configure scripts (read HACKING)
  --update-vc     update Microsoft Visual Studio files
  --update-po     update translation files
EOF
    exit 1
  fi
}

###
###  argument check
###
do_help=yes
do_po=no
do_vc=no
while test $# -gt 0; do
  case "$1" in
    --config)
      do_help=no
      ;;
    --update-vc)
      do_help=no
      do_vc=yes
      ;;
    --update-po)
      do_help=no
      do_po=yes
      ;;
    *)
      echo "$0: unknown option $1"
      do_help=yes
      help
      ;;
  esac
  shift
done

##
##  Give help if needed
##
help

##
##  Update the MSVC project files
##
if test "$do_vc" = "yes"
then
  if test ! -f Makefile
  then
    echo "no Makefile found, did you run ./configure?"
    exit 1
  fi

  #  The evil ^M
  M=''

  #  Sources that get built under Win32
  LIBVLC_SOURCES=`make show-libvlc-sources | grep '^X: ' | cut -b3-`
  LIBVLC_HEADERS=`make show-libvlc-headers | grep '^X: ' | cut -b3-`
  LIBVLC_PKG_HEADERS=`make show-libvlc-pkg-headers | grep '^X: ' | cut -b3-`

  # libvlc files
  for target in evc/libvlc.vcp msvc/libvlc.dsp
  do
    rm -f ${target}
    #  Top of the project file
    cat ${target}.in > ${target}
    #  The source files
    cat >> ${target} << EOF
# Begin Group "Source Files"${M}
# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"${M}
EOF
    for file in `for i in ${LIBVLC_SOURCES} ; do echo $i ; done | grep -v "/.*/"`
    do
      cat >> ${target} << EOF
# Begin Source File${M}
SOURCE="..\\`echo $file | sed -e 's%/%\\\\%g'`"${M}
# ADD CPP /D "__VLC__" /D PLUGIN_PATH=\\"plugins\\" /D DATA_PATH=\\"share\\"${M}
# End Source File${M}
EOF
    done
    for subdir in `for i in ${LIBVLC_SOURCES} ; do echo $i ; done | grep "/.*/" | cut -f2 -d/ | sort | uniq`
    do
      cat >> ${target} << EOF
# Begin Group "${subdir}"${M}
EOF
      for file in `for i in ${LIBVLC_SOURCES} ; do echo $i ; done | grep "/${subdir}/"`
      do
      if test "${target}" = "evc/libvlc.vcp"
      then
        cat >> ${target} << EOF
# Begin Source File${M}
SOURCE="..\\`echo $file | sed -e 's%/%\\\\%g'`"${M}
# ADD CPP /D "__VLC__" /D PLUGIN_PATH=\\"plugins\\" /D DATA_PATH=\\"share\\"${M}
!IF "\$(CFG)" == "vlc - Win32 (WCE MIPS) Release"${M}
# PROP Intermediate_Dir "MIPSRel\\${subdir}"${M}
# PROP Output_Dir "MIPSRel\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE MIPS) Debug"${M}
# PROP Intermediate_Dir "MIPSDbg\\${subdir}"${M}
# PROP Output_Dir "MIPSDbg\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE SH4) Release"${M}
# PROP Intermediate_Dir "SH4Rel\\${subdir}"${M}
# PROP Output_Dir "SH4Rel\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE SH4) Debug"${M}
# PROP Intermediate_Dir "SH4Dbg\\${subdir}"${M}
# PROP Output_Dir "SH4Dbg\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE SH3) Release"${M}
# PROP Intermediate_Dir "SH3Rel\\${subdir}"${M}
# PROP Output_Dir "SH3Rel\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE SH3) Debug"${M}
# PROP Intermediate_Dir "SH3Dbg\\${subdir}"${M}
# PROP Output_Dir "SH3Dbg\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE ARM) Release"${M}
# PROP Intermediate_Dir "ARMRel\\${subdir}"${M}
# PROP Output_Dir "ARMRel\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE ARM) Debug"${M}
# PROP Intermediate_Dir "ARMDbg\\${subdir}"${M}
# PROP Output_Dir "ARMDbg\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE x86em) Release"${M}
# PROP Intermediate_Dir "X86EMRel\\${subdir}"${M}
# PROP Output_Dir "X86EMRel\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 (WCE x86em) Debug"${M}
# PROP Intermediate_Dir "X86EMDbg\\${subdir}"${M}
# PROP Output_Dir "X86EMDbg\\${subdir}"${M}
!ENDIF${M}
# End Source File${M}
EOF
        else
          cat >> ${target} << EOF
# Begin Source File${M}
SOURCE="..\\`echo $file | sed -e 's%/%\\\\%g'`"${M}
# ADD CPP /D "__VLC__" /D PLUGIN_PATH=\\"plugins\\" /D DATA_PATH=\\"share\\"${M}
!IF "\$(CFG)" == "vlc - Win32 Release"${M}
# PROP Intermediate_Dir "Release\\${subdir}"${M}
# PROP Output_Dir "Release\\${subdir}"${M}
!ELSEIF "\$(CFG)" == "vlc - Win32 Debug"${M}
# PROP Intermediate_Dir "Debug\\${subdir}"${M}
# PROP Output_Dir "Debug\\${subdir}"${M}
!ENDIF${M}
# End Source File${M}
EOF
        fi
      done
      cat >> ${target} << EOF
# End Group${M}
EOF
    done
    cat >> ${target} << EOF
# End Group${M}
EOF
    #  The headers
    cat >> ${target} << EOF
# Begin Group "Header Files"${M}
# PROP Default_Filter "h;hpp;hxx;hm;inl"${M}
EOF
    for file in ${LIBVLC_HEADERS}
    do
      cat >> ${target} << EOF
# Begin Source File${M}
SOURCE="..\\`echo $file | sed -e 's%/%\\\\%g'`"${M}
# End Source File${M}
EOF
    done
    cat >> ${target} << EOF
# Begin Group "vlc"${M}
EOF
    for file in ${LIBVLC_PKG_HEADERS}
    do
      cat >> ${target} << EOF
# Begin Source File${M}
SOURCE="..\\`echo $file | sed -e 's%/%\\\\%g'`"${M}
# End Source File${M}
EOF
    done
    cat >> ${target} << EOF
# End Group${M}
# End Group${M}
# End Target${M}
# End Project${M}
EOF
  done

  # plugins files
  for target in evc/plugins.vcp msvc/plugins.dsp
  do
    rm -f ${target}
    #  Top of the project file
    cat ${target}.in > ${target}
    #  The source files
    cat >> ${target} << EOF
# Begin Group "Source Files"${M}
# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"${M}
# End Group${M}
EOF
    #  The headers
    cat >> ${target} << EOF
# Begin Group "Header Files"${M}
# PROP Default_Filter "h;hpp;hxx;hm;inl"${M}
# End Group${M}
# End Target${M}
# End Project${M}
EOF
  done

  # vlc files
  for target in evc/vlc.vcp msvc/vlc.dsp
  do
    rm -f ${target}
    #  Top of the project file
    cat ${target}.in > ${target}
    #  The source files
    cat >> ${target} << EOF
# Begin Group "Source Files"${M}
# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"${M}
# Begin Source File${M}
EOF
    if test "${target}" = "evc/vlc.vcp"
    then
      cat >> ${target} << EOF
SOURCE="..\\evc\\vlc.c"${M}
EOF
    else
      cat >> ${target} << EOF
SOURCE="..\\src\\vlc.c"${M}
EOF
    fi
    cat >> ${target} << EOF
# End Source File${M}
# End Group${M}
EOF
    #  Bottom of the project file - handles resource files too
    cat ${target}.out >> ${target}
  done

  exit 0
fi

##
##  Update the potfiles because no one ever does it
##
if test "$do_po" = "yes"
then
  cd po
  make update-po 2>&1 | grep '^[^:]*:$' | cut -f1 -d: | tr '\n' ' ' | sed 's/ $//'
  cd ..

  exit 0
fi

##
## Check that our tools don't suck
##
SEDSUCKS=no
if test ! 20000 -eq `perl -e 'printf "%s\n","a"x20000' | sed -e 's/.//' 2>/dev/null | wc -c`
then
  SEDSUCKS=yes
fi

PERLSUCKS=no
AUTOMAKESUCKS=no

##
## Generate the modules makefile, by parsing modules/**/Modules.am
##

printf "generating Modules.am and configure.ac"

echo > Modules.am
echo > configure.ac

ALL_FLAGS="`sed -n -e '/^[^=A-Z]*[A-Z]*FLAGS_[^=]*=/s/[^=A-Z]*\([A-Z]*FLAGS_[^=]*=\).*/\1/p' < configure.ac.in | sort | uniq`"

cat >> configure.ac << EOF
dnl ################################################################
dnl # Do not edit this file, it was generated from configure.ac.in #
dnl ################################################################

EOF
sed -n -e '/dnl do not touch this line/q;p' < configure.ac.in >> configure.ac

modules=""
for mf in `sed -ne 's@[^a-z]*\([^ ]*\)am.*@modules/\1am@p' < modules/Makefile.am`
do
  printf "."
  dir=`echo ${mf} | sed -e 's@\(.*\)/.*@\1@'`
  topdir=`echo ${dir} | cut -f2 -d/`
  sym=`echo ${dir} | sed -e 'y@/@_@'`
  cat >> Modules.am << EOF
# Directory ${dir}

include ${dir}/Modules.am

EOF
  sed -n -e 's/^ *SOURCES_\([^ ]*\).*/\1/p' < ${mf} | while read mod
  do
    LINKER="LINK"
    if echo "$ALL_FLAGS" | grep '^CPPFLAGS_'${mod}'=$' >/dev/null 2>&1; then
        echo "AC_SUBST(CPPFLAGS_${mod})" >> configure.ac; fi
    if echo "$ALL_FLAGS" | grep '^CFLAGS_'${mod}'=$' >/dev/null 2>&1; then
        echo "AC_SUBST(CFLAGS_${mod})" >> configure.ac; fi
    if echo "$ALL_FLAGS" | grep '^CXXFLAGS_'${mod}'=$' >/dev/null 2>&1; then
        LINKER="CXXLINK"
        echo "AC_SUBST(CXXFLAGS_${mod})" >> configure.ac; fi
    if echo "$ALL_FLAGS" | grep '^OBJCFLAGS_'${mod}'=$' >/dev/null 2>&1; then
        LINKER="OBJCLINK"
        echo "AC_SUBST(OBJCFLAGS_${mod})" >> configure.ac; fi
    if echo "$ALL_FLAGS" | grep '^LDFLAGS_'${mod}'=$' >/dev/null 2>&1; then
        echo "AC_SUBST(LDFLAGS_${mod})" >> configure.ac; fi
    if grep '^SOURCES_'${mod}'.*=.*PRIVATE' < ${mf} >/dev/null 2>&1; then
        PRIVATE='#'; else
        PRIVATE=''; fi
    if grep '^nodist_SOURCES_'${mod}'' < ${mf} >/dev/null 2>&1; then
        NODIST=''; else
        NODIST='#'; fi
    cat >> configure.ac << EOF
AM_CONDITIONAL(${mod}_plugin, test x\$${mod}_plugin = xyes)
AM_CONDITIONAL(${mod}_builtin, test x\$${mod}_builtin = xyes)
EOF
# Generation of Modules.am
# ~~~~~~~~~~~~~~~~~~~~~~~~
# - L_ is for LIBRARIES_, D_ for DATA_, B_ for BUILT_SOURCES_, F_ for LDFLAGS_,
#   S_ for SOURCES_, _p is for _plugin, _b is for _builtin. This is to reduce
#   the resulting file size.
# - *_CFLAGS, *_CXXFLAGS etc. include *_CPPFLAGS because per-object CPPFLAGS
#   does not seem to work properly with any automake version I tested.
    cat >> Modules.am << EOF
# The ${mod} plugin

if ${mod}_plugin
if UNTRUE
L_${mod}_p = ${dir}/lib${mod}_plugin.a
endif
D_${mod}_p = ${dir}/lib${mod}_plugin\$(LIBEXT)
${NODIST}B_${mod}_p = \$(nodist_SOURCES_${mod})
endif
if ${mod}_builtin
L_${mod}_b = ${dir}/lib${mod}.a
F_${mod}_b = \$(LDFLAGS_${mod})
if BUILD_MOZILLA
L_${mod}_pic = ${dir}/lib${mod}_pic.a
endif
${NODIST}B_${mod}_b = \$(nodist_SOURCES_${mod})
endif

L_builtin += \$(L_${mod}_b)
L_builtin_pic += \$(L_${mod}_pic)
LDFLAGS_builtin += \$(F_${mod}_b)
${PRIVATE}BUILT_SOURCES += \$(B_${mod}_p) \$(B_${mod}_b)
PLUGIN_FILES += \$(D_${mod}_p)

${PRIVATE}${sym}_lib${mod}_plugin_a_SOURCES = \$(SOURCES_${mod})
${NODIST}${PRIVATE}nodist_${sym}_lib${mod}_plugin_a_SOURCES = \$(nodist_SOURCES_${mod})
${sym}_lib${mod}_plugin_a_CPPFLAGS = \$(CPPFLAGS_plugin) \$(CPPFLAGS_${mod}) -DMODULE_NAME=${mod} -DMODULE_NAME_IS_${mod}
${sym}_lib${mod}_plugin_a_CFLAGS = \$(CFLAGS_plugin) \$(CFLAGS_${mod}) \$(${sym}_lib${mod}_plugin_a_CPPFLAGS)
${sym}_lib${mod}_plugin_a_CXXFLAGS = \$(CXXFLAGS_plugin) \$(CXXFLAGS_${mod}) \$(${sym}_lib${mod}_plugin_a_CPPFLAGS)
${sym}_lib${mod}_plugin_a_OBJCFLAGS = \$(OBJCFLAGS_plugin) \$(OBJCFLAGS_${mod}) \$(${sym}_lib${mod}_plugin_a_CPPFLAGS)

${sym}_lib${mod}_pic_a_SOURCES = ${PRIVATE}\$(SOURCES_${mod})
${NODIST}nodist_${sym}_lib${mod}_pic_a_SOURCES = ${PRIVATE}\$(nodist_SOURCES_${mod})
${sym}_lib${mod}_pic_a_CPPFLAGS = \$(CPPFLAGS_builtin_pic) \$(CPPFLAGS_${mod}) -DMODULE_NAME=${mod} -DMODULE_NAME_IS_${mod}
${sym}_lib${mod}_pic_a_CFLAGS = \$(CFLAGS_builtin_pic) \$(CFLAGS_${mod}) \$(${sym}_lib${mod}_pic_a_CPPFLAGS)
${sym}_lib${mod}_pic_a_CXXFLAGS = \$(CXXFLAGS_builtin_pic) \$(CXXFLAGS_${mod}) \$(${sym}_lib${mod}_pic_a_CPPFLAGS)
${sym}_lib${mod}_pic_a_OBJCFLAGS = \$(OBJCFLAGS_builtin_pic) \$(OBJCFLAGS_${mod}) \$(${sym}_lib${mod}_pic_a_CPPFLAGS)

${sym}_lib${mod}_a_SOURCES = ${PRIVATE}\$(SOURCES_${mod})
${NODIST}nodist_${sym}_lib${mod}_a_SOURCES = ${PRIVATE}\$(nodist_SOURCES_${mod})
${sym}_lib${mod}_a_CPPFLAGS = \$(CPPFLAGS_builtin) \$(CPPFLAGS_${mod}) -DMODULE_NAME=${mod} -DMODULE_NAME_IS_${mod}
${sym}_lib${mod}_a_CFLAGS = \$(CFLAGS_builtin) \$(CFLAGS_${mod}) \$(${sym}_lib${mod}_a_CPPFLAGS)
${sym}_lib${mod}_a_CXXFLAGS = \$(CXXFLAGS_builtin) \$(CXXFLAGS_${mod}) \$(${sym}_lib${mod}_a_CPPFLAGS)
${sym}_lib${mod}_a_OBJCFLAGS = \$(OBJCFLAGS_builtin) \$(OBJCFLAGS_${mod}) \$(${sym}_lib${mod}_a_CPPFLAGS)

libvlc_LIBRARIES += \$(L_${mod}_b) \$(L_${mod}_pic)
lib${mod}_DATA = \$(D_${mod}_p)

lib${mod}dir = \$(libdir)/vlc/${topdir}
${PRIVATE}noinst_LIBRARIES += \$(L_${mod}_p)
${PRIVATE}${dir}/lib${mod}_plugin\$(LIBEXT): \$(${sym}_lib${mod}_plugin_a_OBJECTS)
${PRIVATE}	\$(${LINKER}) \$^ -shared \$(LDFLAGS_plugins) \$(LDFLAGS_${mod})


EOF
  done
done

echo "AM_CONDITIONAL(UNTRUE, false)" >> configure.ac
sed -n -e '/dnl do not touch this line/,//p' < configure.ac.in >> configure.ac

echo "done."

###
###  classic bootstrap stuff
###
set -x
rm -f aclocal.m4 m4/oldgettext.m4 configure config.guess config.log config.sub ltmain.sh libtool ltconfig missing mkinstalldirs depcomp install-sh
rm -Rf intl

# Check for gettext
if gettextize --version >/dev/null 2>&1
then
if expr `gettextize --version | sed -e '1s/[^0-9]*//' -e q` \
        '>' 0.11.2 >/dev/null 2>&1
then
  # We have gettext, and a recent version! Everything is cool.
  autopoint || exit 1
  GETTEXT=yes
else
  # User's gettext is too old. try to continue anyway.
  mkdir -p intl
  echo > intl/Makefile.am
  echo 'AC_DEFUN([AM_GNU_GETTEXT_VERSION], [])' > m4/oldgettext.m4
  GETTEXT=old
fi;else
  # we don't have gettext. grmbl. try to continue anyway.
  mkdir -p intl
  echo > intl/Makefile.am
  echo 'AC_DEFUN([AM_GNU_GETTEXT_VERSION], [])' > m4/oldgettext.m4
  GETTEXT=no
fi

# Check for automake
amvers="none"
if automake-1.7 --version >/dev/null 2>&1
then
  amvers="-1.7"
else
  if automake-1.6 --version >/dev/null 2>&1
  then
    amvers="-1.6"
    if expr "`automake-1.6 --version | sed -e '1s/[^0-9]*//' -e q`" "<=" "1.6.1" > /dev/null 2>&1
    then AUTOMAKESUCKS=yes
    fi
  else
    if automake-1.5 --version >/dev/null 2>&1
    then
      amvers="-1.5"
    else
      if automake --version > /dev/null 2>&1
      then
        amvers=`automake --version | sed -e '1s/[^0-9]*//' -e q`
        case $amvers in
        1.6|1.6.0|1.6.1)
          AUTOMAKESUCKS=yes ;;
        esac

        if expr "$amvers" "<" "1.5" > /dev/null 2>&1
        then amvers="none"
        else amvers=""
        fi
      fi
    fi
  fi
fi

if test x$amvers = xnone
then
  set +x
  echo "you need automake version 1.5 or later"
  exit 1
fi

# Do the rest
aclocal${amvers} -I m4 || exit 1
autoheader || exit 1

automake${amvers} --foreign --add-missing --copy || PERLSUCKS=yes

case "$PERLSUCKS" in
  no)
  ;;
  yes)
    set +x
    echo ""
    echo "==========================================================="
    echo "IMPORTANT NOTE: automake failed. On certain systems this is"
    echo "because of insufficient stack size. Please set the stack"
    echo "size to something bigger or unlimited (\`unlimit stacksize')"
    echo "and try again."
    exit 1
  ;;
esac

# Wrap automake's long lines, because the Solaris sed doesn't support lines
# longer than 3999 characters, and ./configure calls sed. We use Perl instead
# of sed for obvious reasons :)
perl -ne 'if(/^.{500}/) {s/(.{200}[^ ]* )/$1\\\n\t/g} print $_' < Makefile.in > Makefile.in.tmp && mv Makefile.in.tmp Makefile.in

autoconf || exit 1

##
##  headers which need to be regenerated
##
rm -f src/misc/modules_builtin.h src/misc/modules_plugin.h
rm -f include/vlc_symbols.h
rm -f mozilla/vlcintf.h

##
##  Shut up
##
set +x

##
##  Glade sometimes sucks
##
echo "workarounds for annoying glade features"
for file in gnome_interface.c gtk_interface.c
do
if grep "DO NOT EDIT THIS FILE" modules/gui/gtk/$file 2>&1 > /dev/null
then
    rm -f /tmp/$$.$file.bak
    cat > /tmp/$$.$file.bak << EOF
/* This file was created automatically by glade and fixed by bootstrap */

#include <vlc/vlc.h>
EOF
    sed -e 1,7d \
        -e 's#_("-:--:--")#"-:--:--"#' \
        -e 's#_("---")#"---"#' \
        -e 's#_("--")#"--"#' \
        -e 's#_("/dev/dvd")#"/dev/dvd"#' \
        -e 's#_(\("./."\))#\1#' \
        < modules/gui/gtk/$file >> /tmp/$$.$file.bak
    mv -f /tmp/$$.$file.bak modules/gui/gtk/$file
fi
done

file=gtk_support.h
if grep "DO NOT EDIT THIS FILE" modules/gui/gtk/$file 2>&1 > /dev/null
then
    rm -f /tmp/$$.$file.bak
    sed -e 's/DO NOT EDIT THIS FILE.*/This file was created automatically by glade and fixed by bootstrap/ ; s/#if.*ENABLE_NLS.*/#if defined( ENABLE_NLS ) \&\& defined ( HAVE_GETTEXT )/' < modules/gui/gtk/$file > /tmp/$$.$file.bak
    mv -f /tmp/$$.$file.bak modules/gui/gtk/$file
fi

##
##  Tell the user about gettext and sed
##
case "$GETTEXT" in
  yes)
  ;;
  no)
    echo ""
    echo "==========================================================="
    echo "IMPORTANT NOTE: you do not have gettext installed on your"
    echo "system. The vlc build will work, but you will not have"
    echo "internationalization support. We suggest installing gettext."
  ;;
  old)
    echo ""
    echo "=========================================================="
    echo "NOTE: you have an old version of gettext installed on your"
    echo "system. We suggest upgrading to gettext 0.11.3 or later."
  ;;
esac

case "$AUTOMAKESUCKS" in
  no)
  ;;
  yes)
    echo ""
    echo "============================================================="
    echo "IMPORTANT NOTE: your version of automake has a bug which will"
    echo "prevent proper plugin compilation. Either compile VLC with"
    echo "the --disable-plugins flag, or use a version of automake newer"
    echo "than 1.6.1 (1.6.2 is OK, and so are the 1.5 series)."
  ;;
esac

case "$SEDSUCKS" in
  no)
  ;;
  yes)
    echo ""
    echo "============================================================="
    echo "IMPORTANT NOTE: the version of 'sed' on your system is unable"
    echo "to handle long lines. bootstrap will try its best to generate"
    echo "a correct Makefile, but you should expect problems. We highly"
    echo "recommend installing GNU sed."
  ;;
esac

