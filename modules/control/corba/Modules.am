## corba module declaration

SOURCES_corba = corba.c mediacontrol-core.c mediacontrol-plugin.c

nodist_SOURCES_corba = \
	MediaControl-common.c \
	MediaControl-skels.c \
	MediaControl.h \
	$(NULL)

corbaidldir = $(datadir)/idl
corbaidl_DATA = MediaControl.idl

## orbittypelibdir = $(libdir)/orbit-2.0
orbittypelibdir = $(libdir)/advene
orbittypelib_DATA = MediaControl.so

EXTRA_DIST += $(corbaidl_DATA)

ORBIT_IDL=$(shell pkg-config --variable=orbit_idl ORBit-2.0)

GENERATEDFILES = MediaControl-common.c MediaControl-skels.c MediaControl.h
BUILT_SOURCES += $(GENERATEDFILES) MediaControl-imodule.c

## corba.c: MediaControl.h

## Needed for both MediaControl.so and libcorba_plugin compilation
INCLUDES = $(CORBA_CFLAGS)

## MediaControl.so rules
MediaControl.so: MediaControl-imodule.c
	[ -z "$(CORBA_CFLAGS)" ] || $(CC) -fPIC -o MediaControl-imodule.o -c $< $(CORBA_CFLAGS)
	[ -z "$(CORBA_CFLAGS)" ] || $(CC) -shared -o $@ MediaControl-imodule.o $(CORBA_LIBS)

$(GENERATEDFILES): $(corbaidl_DATA)
	[ -z "$(CORBA_CFLAGS)" ] || $(ORBIT_IDL) $(corbaidl_DATA)

## We invoke 2 times $(ORBIT_IDL), else the --imodule
## invocation builds MediaControl-common.c without some
## glue code that is needed.
MediaControl-imodule.c: $(corbaidl_DATA)
	[ -z "$(CORBA_CFLAGS)" ] || $(ORBIT_IDL) --imodule $<
	[ -z "$(CORBA_CFLAGS)" ] || $(ORBIT_IDL) $<

clean:
	$(RM) -f $(GENERATEDFILES)
	$(RM) -f MediaControl-imodule.c

