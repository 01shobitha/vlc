
[ Note: this howto is probably useful to core vlc developers only ]

  Release HOWTO
 - - - - - - - -

 * Tests préalables (compilation, regression test, etc.) (on ne rit pas)

 * Opérations sur la repository

  - générer un timestamp de release (par exemple avec 822-date)
  - updater le numéro de version partout où c'est nécessaire
     · configure.in (relancer autoconf)
     · vlc.spec
     · extras/libdvdcss/libdvdcss.spec (si nécessaire)
     · ipkg/control
     · debian/changelog
  - mettre à jour les ChangeLog et la TODO list pour ceux qui auraient
    étourdiment oublié de l'updater à chaque commit
  - updater le numéro de version et le timestamp dans :
     · ChangeLog
     · ChangeLog.libdvdcss (si nécessaire)
  - updater debian/changelog (laissez faire sam si vous ne savez pas
    comment faire)

 * Commit, tag

 * Tarballs

  - créer le tar.gz et le tar.bz2 du vlc avec `make snapshot'.
  - copier le tar.gz et le tar.bz2 sur brahma, dans le répertoire
    /opt/ftp/pub/videolan/vlc/<n° de version>/
  - créer le tar.gz et le tar.bz2 de libdvdcss avec `make libdvdcss-snapshot'.
  - copier le tar.gz et le tar.bz2 sur brahma, dans le répertoire
    /opt/ftp/pub/videolan/libdvdcss/<n° de version>/
  - si les répertoires créés ne sont pas en g+w, corriger cela

 * Packages Debian pour videolan.org

  - à partir d'un tar.gz, lancer `dpkg-buildpackage -rfakeroot [-us -uc]'
  - copier tous les fichiers créés sur brahma, dans le répertoire
    /opt/ftp/pub/videolan/vlc/<n° de version>/deb/

 * Packages Debian officiels pour debian.org

  - normalement il n'y a que sam qui touche à ça.
  - créer un tar.gz sans libdvdcss avec `make snapshot-nocss'
  - `dpkg-buildpackage -rfakeroot'
  - `debupload'

 * Packages RedHat

  - la commande à taper est `rpm -ba vlc.spec', mais dans le doute
    laisser faire Meuuh

 * Packages BeOS

  - compiler un vlc avec `--enable-release'
  - lancer `make package-beos'
  - copier le .zip créé sur brahma, dans le répertoire
    /opt/ftp/pub/videolan/vlc/<n° de version>/beos/

 * Packages Win32

  - cross-compiler un vlc avec `--enable-release'
  - lancer `make package-win32'
  - copier le .exe créé sur brahma, dans le répertoire
    /opt/ftp/pub/videolan/vlc/<n° de version>/win32/

 * Update sur le web

  - le web se trouve dans /opt/www/videolan/htdocs/
  - éditer vlc/download.html pour mettre à jour les tarballs
  - éditer libdvdcss/download.html si nécessaire
  - éditer news.msg pour mettre une petite bafouille sur la release, en
    s'inspirant des releases précédentes et du changelog quand on a pas
    d'idées

 * Annonce sur www.gnome.org

  - cliquer à gauche sur "Get more software"
  - cliquer sur "Edit an existing map entry"
  - rentrer 'vlc' comme nom de package
  - mettre à jour le numéro de version et d'éventuels détails, et submit
  - l'update est instantanée

 * Annonce sur www.freshmeat.net

  - il faut avoir un compte sur freshmeat
  - aller sur http://www.freshmeat.net/projects/vlc/
  - cliquer sur la branche de la release, par exemple Ourumov
  - choisir "add release" dans le menu déroulant
  - remplir tout le bazar, et submit
  - refaire pareil avec http://www.freshmeat.net/projects/libdvdcss/
  - l'update peut mettre plusieurs heures

 * Mail d'annonce

  - s'inspirer du format des annonces précédentes
  - poster dans videolan-announce, vlc et vlc-devel

