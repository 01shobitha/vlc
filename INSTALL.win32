INSTALL file for the Windows9x/2k/XP version of vlc, the VideoLAN Client

Running VideoLAN Client
=======================

If you have already built vlc (see below) or are using a binary release,
just run 'vlc.exe'.

You can also run vlc from a dos command box, in which case you'll be able
to use the command line arguments. You can obtain a list of these command
line arguments by typing 'vlc --help'.
To store a debug log of the current vlc session, you can use
'vlc -vvvvv --intf=logger nameofyourvideofile', but this will unfortunatly
disable the GUI. You will end-up with a vlc.log file in your current directory.

If you want to play a DVD, run vlc and click on the Disc option in the
interface. You then have to type your drive letter followed by a colon in
the 'Device name' box (eg. 'D:' if this is the letter for your dvdrom drive).

Building VideoLAN Client from the source code
=============================================

If you want to do the tricky job of building vlc from sources, you can do it
in several ways:

- natively on Windows, using MSYS+MINGW (www.mingw.org)
  (MSYS is a minimal build environnement to compile unixish projects under
   windoze. It provides all the common unix tools like sh, gmake...)

- natively on Windows, using cygwin (www.cygwin.com) with or without the
  unix emulation layer.

- or on Linux, using the mingw32 cross-compiler

Getting the right tools
=======================

- cross-compiling with mingw32:
All the necessary tools you need can be found on the videolan web site:
http://www.videolan.org/vlc/windows.html

You first need to download a linux cross-compiler version of mingw32.
(for Debian GNU/Linux users, there is a mingw32 package)

You must also not forget to install the extra development packages if you want
to build the DirectX, GTK and SDL plugins.

- compiling natively on Windoze with MSYS+MINGW:
You will need to download and install the latest MSYS (version 1.0.7 as
of now) and MINGW.
The installation is really easy. Begin with the MSYS auto-installer and once
this is done, extract MINGW into c:\msys\1.0\mingw. You also have to remember
to remove the make utility included with MINGW as it conflicts with the one
from MSYS (just rename or remove c:\msys\1.0\mingw\bin\make.exe).

http://www.mingw.org/download.shtml
http://prdownloads.sourceforge.net/mingw/MSYS-1.0.7-i686-2.exe
http://prdownloads.sourceforge.net/mingw/MinGW-1.1.tar.gz

You must also not forget to install the extra development packages if you want
to build the DirectX, GTK and SDL plugins.
(http://www.videolan.org/vlc/windows.html)

- compiling natively on Windoze with cygwin:
You will need to download and run the setup.exe app from cygwin's web site
(www.cygwin.com).
I'm personnaly running the experimental distribution (and gcc-3.2) with the
exception of the autoconf tool for which I'm using the autoconf-devel-2.52-4
package (I had problems with 2.53a-1). You will need to make sure you install
at least the gcc-mingw, mingw-runtime and w32api packages.

NOTE: by default, the GTK package is configured to be installed in
/usr/local/gtk-win32, if you want to change this path, then you need to edit
the gtk-win32/bin/gtk-config file and change "gtk_dir=" accordingly.
The same is true for the SDL package, it is installed in
/usr/local/SDL-1.2.3-win32 by default and you need to change "prefix=" in 
SDL-1.2.3-win32/i386-mingw32msvc/bin/sdl-config if you plan to extract the
archive in a different directory.

- compiling natively on Windoze with cygwin:
You will need to download and install cygwin (www.cygwin.com).

You must also not forget to install the extra development packages if you want
to build the DirectX, GTK and SDL plugins.
(http://www.videolan.org/vlc/windows.html)

Configuring the build
=====================

The best way to configure the build process of vlc is to use the
`./configure' script.

See `./configure --help' for more information.

If you are cross-compiling from Debian, you can use something
along those lines:

  ./bootstrap; \
  CC=i586-mingw32msvc-gcc CXX=i586-mingw32msvc-g++ \
  ./configure --host=i586-mingw32msvc --build=i386-linux \
  --with-gtk-config-path=/usr/local/gtk-win32/bin \
  --with-sdl-config-path=/usr/local/SDL-1.2.3-win32/i386-mingw32msvc/bin \
  --with-directx=/usr/local/dxheaders \
  --with-dvdcss-tree=../libdvdcss-win

If you are cross-compiling using the mingw32 package provided by
www.videolan.org, you have to use something along those lines:

  ./bootstrap; \
  CC=i586-mingw32msvc-gcc CXX=i586-mingw32msvc-g++ \
  PATH=/usr/local/cross-tools/bin:$PATH \
  ./configure --host=i586-mingw32msvc --build=i386-linux \
  --with-gtk-config-path=/usr/local/gtk-win32/bin \
  --with-sdl-config-path=/usr/local/SDL-1.2.3-win32/i386-mingw32msvc/bin \
  --with-directx=/usr/local/dxheaders \
  --with-dvdcss-tree=../libdvdcss-win

If you are compiling natively on Windoze, then you can use something
along those lines:
  ./bootstrap; \
  ./configure \
  --with-gtk-config-path=/c/dev/gtk-win32/bin \
  --with-sdl-config-path=/c/dev/SDL-1.2.3-win32/i386-mingw32msvc/bin \
  --with-directx=/c/dev/dxheaders \
  --with-dvdcss-tree=../libdvdcss-win

If you are using cygwin, you can build vlc with or without the unix emulation
layer (without is usually better). To build without the emulaion layer, use
something like this:
  ./bootstrap; \
  CC="gcc -mno-cygwin" CXX="g++ -mno-cygwin" \
  ./configure \
  --with-gtk-config-path=/cygdrive/c/dev/gtk-win32/bin \
  --with-sdl-config-path=/cygdrive/c/dev/SDL-1.2.3-win32/i386-mingw32msvc/bin \
  --with-directx=/cygdrive/c/dev/dxheaders \
  --with-dvdcss-tree=../libdvdcss-win
If you want to use the emulation layer, then just omit the CC="gcc -mno-cygwin"
CXX="g++ -mno-cygwin" line.

Note: when using the --with-dvdcss-tree you need to compile the libdvdcss tree
beforehand.

Building VideoLAN Client
========================

Have a look at the generated Makefile.opts file, you may want to choose
which modules will be compiled as plugins, and which ones will remain in
the core application. The configure script tries to guess for you.

Once configured, to build vlc you have to:

If you are cross-compiling from Debian or compiling natively on Windoze,
then just run `make'.

If you are cross-compiling using the mingw32 package provided by
www.videolan.org, run `PATH=/usr/local/cross-tools/bin:$PATH make'.

Building Win32 interface with bcc32 (Borland's compiler)
========================================================
(This stage is only necessary if you want to use the Win32 native interface.
 If you are happy with the GTK interface, then you can skip this section)

1) Install Borland C++ Builder, you will need bpr2mak and make.

2) Make sure you have the bpr2mak and bcmake (NOT make!) commands in $PATH,
they can be symlinks to the Borland bpr2mak and make utilities, or wrappers
that call them through Wine if you are cross-compiling from Linux.

3) Configure vlc as usual with the --enable-intfwin flag and build it.

Well done, now you're ready to use vlc!
=======================================
