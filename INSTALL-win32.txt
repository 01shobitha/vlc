INSTALL file for the Windows9x/2k version of vlc, the VideoLAN Client

Running VideoLAN
================

If you have already built vlc (see below) or are using a binary release,
just run 'vlc.exe'.

You can also run vlc from a dos command box, in which case you'll be able
to use the command line arguments. You can obtain a list of these command
line arguments by typing 'vlc --help'.
It is also sometimes useful to display vlc's debug console. You can do so
by running 'vlc -v'.
This feature is at the moment broken. To display vlc's debug messages,
open the menu 'view', select 'messages'.
To store a debug log of the current vlc session, you can use
'vlc -vvv --stdout=debug.txt'.

If you want to play a DVD, run vlc and click on the Disc option in the
interface. You then have to type your drive letter in the 'Device name'
box including the final '\' (eg. 'D:\' if your dvdrom drive is assigned the letter 'D').
( !Warning: you have to be in administrator mode (for now) on Win2k )


Building VideoLAN from source code
==================================

If you want to do the tricky job of building vlc from source, follow
these instructions:
( WARNING: the win32 build process is not yet really stable, so you may have
  to hack manually the MAKEFILES )

Getting the right tools
=======================

You can build the win32 vlc port in two ways:
- natively on Windows
- or on Linux, using cross-compiling

All the necessary tools can be found on the libSDL web page:
http://www.libsdl.org/Xmingw32/

- cross-compiling with mingw32:
You need to download the linux cross-compiler version of mingw32.
(for Debian GNU/Linux users, there is a mingw32 package)
You must also not forget to install some extra header files and libraries if
you want to build some plugins like DirectX, GTK or SDL.

- compiling natively on Windoze:
[coming soon (investigating a combination of cygwin+mingw32)]

Configuring the build
=====================

A typical way to configure the build process of vlc is to use the
`./configure' script.

See `./configure --help' for more information.

For example if you are cross-compiling from Debian, you can use something
along those lines:

 make distclean ; CC=i586-mingw32msvc-gcc \
   ./configure --host=i586-mingw32msvc --target=i586-mingw32msvc \
    --build=i386-linux --with-gtk-config-path=/usr/i586-mingw32msvc/bin \
    --with-sdl-config-path=/usr/i586-mingw32msvc/bin

./configure uses the 'gtk-config' and 'sdl-config' scripts and unfortunately,
when cross-compiling you have to tell ./configure where to find them.
You have two choices for this, you can either add the path to these files at
the beginning of your PATH variable. Or you can use the
'--with-gtk/sdl-config-path' option.
(by the way, you may have to create a gtk-config script yourself or modify
the one from your linux distro)

If you are cross-compiling using the package provided by
http://www.libsdl.org/Xmingw32/, you can use something along those lines:

 make distclean ; PATH=/usr/local/cross-tools/bin:/usr/local/cross-tools/i386-mingw32msvc/bin:$PATH \
   ./configure --host=i386-mingw32msvc \
   --target=i386-mingw32msvc --build=i386-linux

Building VideoLAN
=================

Have a look at the generated Makefile.opts file, you may want to choose
which modules will be compiled as plugins, and which ones will remain in
the core application. The configure script tries to guess for you.

Once configured, run `make' to build vlc.

If you are using the tools from http://www.libsdl.org/Xmingw32/ you can type something like:

 PATH=/usr/local/cross-tools/bin:/usr/local/cross-tools/i386-mingw32msvc/bin:$PATH \
   make


Well done, now you're ready to use vlc!
